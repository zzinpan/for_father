<!DOCTYPE html>
<html>
<head>
<meta charset=UTF-8">
<title>신나라유통 ERP > record > management</title>
<link rel="stylesheet" href="/lib/jquery-ui-1.12.1/jquery-ui.min.css">
<link rel="stylesheet" href="/lib/bootstrap/bootstrap.min.css">
<link rel="stylesheet" href="/lib/bootstrap/bootstrap-datepicker.min.css">
<style type="text/css">
body { margin: 0px; padding: 0px; overflow: hidden; font-family: sans-serif; color: #616161; }
.smc-btn { float: right; display: inline-block; padding: 4px 10px; vertical-align: bottom; font-weight: bold; font-size: 10px; box-shadow: 0px 0px 0px 1px #ccc; border-radius: 4px; cursor: pointer; margin-left: 4px; }
.smc-btn:not(.disable):hover { box-shadow: 0px 0px 1px 1px #aaa; !important; }
.smc-btn.select { box-shadow: 0px 0px 1px 1px #2196F3 !important; }
.smc-btn.blue { background-color: #2196F3; color: white; box-shadow: 0px 0px 0px 1px #2196F3; }
.smc-btn.bluegray { background-color: #607D8B; color: white; box-shadow: 0px 0px 0px 1px #90A4AE; }
.smc-btn.disable { background-color: #eee; color: #aaa; cursor: not-allowed; }
.smc-header { font-size: 20px; padding: 10px; color: #222; font-weight: bold; margin-bottom: 20px; }
.smc-desc { background-color: #eee; color: #616161; padding: 10px; font-size: 12px; }
.smc-inp { border: none; border-bottom: #ccc solid 1px; padding: 4px 10px; font-size: 10px; width: 100%; }
input::placeholder { color: #cccccc; }
input:focus { outline: none; border: #2196F3 solid 1px; padding: 2px 5px 2px 3px; border-radius: 2px; }
.smc-count { font-size: 10px; height: 28px; }
.smc-grid { position: relative; box-shadow: 0px 0px 0px 1px #ccc; height: calc( 100% - 67px ); border-radius: 4px; }
.small-title { font-weight: bold; margin-bottom: 40px; }
.smc-select { width: 100px; border: #ccc solid 1px; padding-left: 4px; border-radius: 4px; font-size: 12px; }

.popup-row { float: left; width: 100%; }
.mt6 { margin-top: 6px; }
.mt10 { margin-top: 10px; }
.mt20 { margin-top: 20px; }

/* 품목 컬럼 */
.product-column-list { box-shadow: 0px 0px 0px 1px #ccc; border-radius: 4px; font-size: 0px; overflow-x: auto; white-space: nowrap; text-align: left; margin-bottom: 40px; width: 100%; height: 60px; }
	.product-group-column { position: relative; display: inline-block; font-size: 0px; border-right: #ccc solid 1px; height: 100%; vertical-align: top; }
		.product-group-name { position: relative; height: 30px; font-size: 12px; padding: 7px 10px; border-bottom: #ccc solid 1px; background-color: #F1F1F1; text-align: center; }
		.product-column { position: relative; height: calc( 100% - 30px ); min-width: 50px; text-align: center; display: inline-block; border-right: #ccc solid 1px; }
		.product-column.select-column { background-color: #E3F2FD; }
		.product-column:last-child { position: relative; height: calc( 100% - 30px ); text-align: center; display: inline-block; border-right: none; }
		.product-column.top-parent { position: relative; height: 100%; border-right: none; }
			.product-name { height: 30px; padding: 6px 10px; font-size: 12px; background-color: #F1F1F1; border-bottom: #ccc solid 1px; }
			.top-parent > .product-name { height: 60px; padding: 20px 10px; font-size: 12px; }
			.before-total-summary { text-align: right; height: 30px; }
			.today-inputs { text-align: right; height: 90px; border-bottom: #ccc solid 1px; overflow: hidden; }
			.today-input-summary { text-align: right; height: 30px; }
			.today-outputs { position: relative; text-align: right; height: calc( 100% - 240px ); overflow: hidden; }
			.top-parent > .today-outputs { position: relative; text-align: right; height: calc( 100% - 270px ); overflow: hidden; }
			.today-output-summary { text-align: right; height: 30px; }
			.today-total-summary { text-align: right; height: 30px; }
				.today-total-summary > .record { border-bottom: none; }

/* 직원 목록 */
.employee-list { position: fixed; left: 50%; top: 50%; display: ; box-shadow: 0px 0px 0px 1px #ccc; max-height: 200px; overflow-y: auto; border-radius: 4px; background-color: white; }
	.employee-item { border-bottom: #ccc solid 1px; padding: 10px 20px; cursor: pointer; white-space: nowrap; }
	.employee-item.focus { background-color: #2196F3; color: white; }
	.employee-item:not(.focus):hover { background-color: #eee; }
	.employee-item:last-child { border-bottom: none; }

/* 공용 */
.record { height: 30px; padding: 8px 10px 9px 10px; border-bottom: #ccc solid 1px; font-size: 12px; }
.record.select-row { background-color: #E3F2FD; }
		
/* 라이브러리 커스텀 */		
.ui-autocomplete.ui-widget {
	font-size: 10px;
}
</style>
<script type="text/javascript" src="/lib/jquery/jquery-3.2.1.min.js"></script>
<script type="text/javascript" src="/lib/jquery-ui-1.12.1/jquery-ui.min.js"></script>
<script src="/lib/bootstrap/bootstrap.min.js"></script>
<script src="/lib/bootstrap/bootstrap-datepicker.min.js"></script>
<script src="/lib/bootstrap/bootstrap-datepicker.ko.min.js"></script>
<script type="text/javascript">
/**
 	Polyfill
 **/
if (!String.prototype.padStart) {
    String.prototype.padStart = function padStart(targetLength,padString) {
        targetLength = targetLength>>0; //truncate if number or convert non-number to 0;
        padString = String((typeof padString !== 'undefined' ? padString : ' '));
        if (this.length > targetLength) {
            return String(this);
        }
        else {
            targetLength = targetLength-this.length;
            if (targetLength > padString.length) {
                padString += padString.repeat(targetLength/padString.length); //append to original to ensure we are longer than needed
            }
            return padString.slice(0,targetLength) + String(this);
        }
    };
}


//https://tc39.github.io/ecma262/#sec-array.prototype.find
if (!Array.prototype.find) {
  Object.defineProperty(Array.prototype, 'find', {
    value: function(predicate) {
     // 1. Let O be ? ToObject(this value).
      if (this == null) {
        throw new TypeError('"this" is null or not defined');
      }

      var o = Object(this);

      // 2. Let len be ? ToLength(? Get(O, "length")).
      var len = o.length >>> 0;

      // 3. If IsCallable(predicate) is false, throw a TypeError exception.
      if (typeof predicate !== 'function') {
        throw new TypeError('predicate must be a function');
      }

      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.
      var thisArg = arguments[1];

      // 5. Let k be 0.
      var k = 0;

      // 6. Repeat, while k < len
      while (k < len) {
        // a. Let Pk be ! ToString(k).
        // b. Let kValue be ? Get(O, Pk).
        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).
        // d. If testResult is true, return kValue.
        var kValue = o[k];
        if (predicate.call(thisArg, kValue, k, o)) {
          return kValue;
        }
        // e. Increase k by 1.
        k++;
      }

      // 7. Return undefined.
      return undefined;
    },
    configurable: true,
    writable: true
  });
}
</script>
</head>
<body>
<div class="container" style="position: relative; height: 100%;">
	<div class="row" style="position: relative; margin-top: 50px; height: calc( 100% - 50px );">
		<div class="ccol-md-12" style="position: relative; height: 100%;">
			<div class="smc-header">
				입/출고 기록
			</div>
			
			
			<div class="col-md-12" style="position: relative; height: calc( 100% - 68px );">
				
				
				<div class="col-md-12" style="height: 32px;">
					<div class="col-md-4">
						<div class="smc-count" style="padding-top: 8px;">입고 <span id="input-cnt">0</span>건 / 출고 <span id="output-cnt">0</span>건</div>
					</div>
					<div class="col-md-4">
						<div style="margin-top: -10px;">
							<input id="calendar-inp" class="smc-inp" type="text" value="<%= requestDate %>" style="cursor: pointer; text-align: center; border: none; font-size: 20px; font-weight: bold; margin-top: -16px" readonly="readonly">
						</div>
					</div>
					<div class="col-md-4">
						<div id="save-btn" class="smc-btn blue">저장</div>
						<div id="del-btn" class="smc-btn disable">삭제</div>
						<div id="add-output-btn" class="smc-btn">출고 추가</div>
						<div id="add-input-btn" class="smc-btn">입고 추가</div>
					</div>
				</div>
				<div class="col-md-12" style="position: relative; height: calc( 100% - 32px );">
					<div class="product-column-list" style="position: relative; height: calc( 100% - 50px );">
					
						<div style="position: absolute; z-index: -1; top: 0px; height: 60px; border-bottom: #ccc solid 1px; width: 100%; background-color: #f8f8f8;"></div>
						<div style="position: absolute; z-index: -1; top: 60px; height: 30px; border-bottom: #ccc solid 1px; width: 100%; background-color: #fbfbfb;"></div>
						<div id="in-record-div" style="position: absolute; z-index: -1; top: 90px; height: 90px; border-bottom: #ccc solid 1px; width: 100%;"></div>
						<div style="position: absolute; z-index: -1; top: 180px; height: 30px; border-bottom: #ccc solid 1px; width: 100%; background-color: #fbfbfb;"></div>
						<div id="out-record-div" style="position: absolute; z-index: -1; top: 210px;  height: calc( 100% - 270px ); width: 100%;"></div>
						<div style="position: absolute; z-index: -1; bottom: 31px; height: 30px; border-top: #ccc solid 1px; width: 100%;"></div>
						<div style="position: absolute; z-index: -1; bottom: 1px; height: 30px; border-top: #ccc solid 1px; width: 100%;  background-color: #f9f9f9;"></div>
						
						
						<div class="" style="font-size: 12px; text-align: center; background-color: #F1F1F1; position: relative; float: left; width: 60px; height: 100%;">
							<div class="" style="padding: 21px 10px 22px 10px; height: 60px; border-right: #ccc solid 1px; border-bottom: #ccc solid 1px;">구분</div>
							<div class="" style="padding: 8px 0px 15px 0px; border-right: #ccc solid 1px; border-bottom: #ccc solid 1px; height: 30px;">전일재고</div>
							<div class="" style="padding: 38px 0px 45px 0px; border-right: #ccc solid 1px; border-bottom: #ccc solid 1px; height: 90px;">당일입고</div>
							<div class="" style="padding: 8px 0px 15px 0px; border-right: #ccc solid 1px; border-bottom: #ccc solid 1px; height: 30px;">입고계</div>
							<div class="" style="position: relative; border-right: #ccc solid 1px; border-bottom: #ccc solid 1px; height: calc( 100% - 270px );">
								<div style="position: relative; top: calc( 50% - 7px );">당일출고</div>
							</div>
							<div class="" style="padding: 8px 0px 15px 0px; border-right: #ccc solid 1px; border-bottom: #ccc solid 1px; height: 30px;">출고계</div>
							<div class="" style="padding: 8px 0px 15px 0px; border-right: #ccc solid 1px; height: 30px;">당일재고</div>
						</div>
					
						<!-- 데이터 목록 -->
						<div id="product-column-list" style="position: relative; width: calc( 100% - 138px ); display: inline-block; height: 100%;">
						</div>
					
						<div class="" style="position: relative; float: right; width: 18px; height: 100%; font-size: 12px; text-align: center; background-color: #F1F1F1; border-left: #ccc solid 1px;">
							<div class="" style="height: 60px;"></div>
							<div class="" style="height: 30px; border-bottom: #ccc solid 1px;"></div>
							<div id="in-record-scroll" class="" style="height: 90px; overflow: hidden scroll; border-bottom: #ccc solid 1px;">
								<div id="in-record-scroll-bar" style="height: 0px;"></div>
							</div>
							<div class="" style="height: 30px; border-bottom: #ccc solid 1px;"></div>
							<div class="out-record-scroll" style="position: relative; height: calc( 100% - 270px ); overflow: hidden scroll; border-bottom: #ccc solid 1px;">
								<div id="out-record-scroll-bar" style="height: 0px;"></div>
							</div>
						</div>
						<div class="" style="position: relative; height: 100%; float: right; width: 60px; font-size: 12px; text-align: center; background-color: #F1F1F1; border-left: #ccc solid 1px;">
							<div class="" style="font-size: 12px; text-align: center; background-color: #F1F1F1; position: relative; float: left; width: 60px; height: 100%;">
								<div class="" style="padding: 21px 10px 22px 10px; height: 60px; border-right: #ccc solid 1px; border-bottom: #ccc solid 1px;">직원</div>
								<div class="" style="padding: 8px 0px 15px 0px; border-right: #ccc solid 1px; background-color: #F8F8F8; border-bottom: #ccc solid 1px; height: 30px;"></div>
								<div class="" style="padding: 38px 0px 45px 0px; border-right: #ccc solid 1px; background-color: #ffffff; border-bottom: #ccc solid 1px; height: 90px;"></div>
								<div class="" style="padding: 8px 0px 15px 0px; border-right: #ccc solid 1px; background-color: #F8F8F8; border-bottom: #ccc solid 1px; height: 30px;"></div>
								<div id="output-employee-column" class="" style="position: relative; border-right: #ccc solid 1px; background-color: #ffffff; border-bottom: #ccc solid 1px; height: calc( 100% - 270px );">
								</div>
								<div class="" style="padding: 8px 0px 15px 0px; border-right: #ccc solid 1px; background-color: #ffffff; border-bottom: #ccc solid 1px; height: 30px;"></div>
								<div class="" style="padding: 8px 0px 15px 0px; border-right: #ccc solid 1px; background-color: #F8F8F8; height: 30px;"></div>
							</div>
						</div>
					
					</div>
				</div>
				
			</div>
			
		</div>
		
	</div>
</div>

<div id="employee-list" class="employee-list" style="display: none;">
	<% 
		employees.forEach(function( employee ){
			
			var group = groups.find(function( group ){
				return employee.groupId == group.id;
			});
			%><div class="employee-item" data-id="<%= employee.id %>" data-name="<%= employee.name %>">[<%= group.name %>] <%= employee.name %></div><%
		});
	 %>
</div>

<script type="text/javascript">

var now = new Date();
$("#calendar-inp").datepicker({
	language: "ko",
	todayHighlight : true,
	beforeShowDay: function(date){
        return now.getTime() > date.getTime();
    }
}).on('changeDate', function(e){
	var yyyyMMdd = $.datepicker.formatDate('yy-mm-dd', e.date); 
	parent.reload( "/record/management/view?date=" + yyyyMMdd );
});

/**
	jquery 변수
**/

var $window = $(window); // 윈도우
var $body = $("body"); // 바디
var $productColumnList = $("#product-column-list"); // 컬롬 목록

var $addInputBtn = $("#add-input-btn"); // 입고 추가 버튼
var $addOutputBtn = $("#add-output-btn"); // 출고 추가 버튼

var $inputCnt = $("#input-cnt"); // 입고수 표시
var $outputCnt = $("#output-cnt"); // 출고수 표시

var $inRecordScroll = $("#in-record-scroll"); // 입고 스크롤
var $inRecordScrollBar = $("#in-record-scroll-bar"); // 입고 스크롤

var $outRecordScroll = $("#out-record-scroll"); // 입고 스크롤
var $outRecordScrollBar = $("#out-record-scroll-bar"); // 입고 스크롤

var $inRecordDiv = $("#in-record-div"); // 입고 스크롤 영역
var $outRecordDiv = $("#out-record-div"); // 출고 스크롤 영역

var $outputEmployeeColumn = $("#output-employee-column"); // 출고 직원 컬럼

var $employeeList = $("#employee-list"); // 직원 목록

var TemplateModule = (function(){
	
	function recordGetValue(){
		return this.data( "value" );
	}
	function recordSetValue( number ){
		this.data( "value", number );
		this.text( number );
	}
	function inputRecordSetValue( number ){
		this.data( "value", number );
		this.find("input").val( number );
	}
	
	var record = '<div class="record">0</div>';
	var inputRecord = [
		'<div class="record" style="padding: 3px 2px;">',
		'	<input type="text" value="0" min="0" step="1" style="text-align: right; padding-right: 4px; width: 100%;">',
		'</div> '
	].join("");
	var columnGroupName = '<div class="product-group-name">품목그룹명</div>';
	var columnGroup = '<div class="product-group-column"></div>';
	var column = [
		'<div class="product-column">',
		'	<div class="product-name">품목명</div>',
		'	<!-- 전일 재고 --> ',
		'	<div class="before-total-summary"> ',
		'		<div class="record">0</div> ',
		'	</div> ',
		'	<!-- 당일 입고 --> ',
		'	<div class="today-inputs">',
		'	</div> ',
		'	<!-- 입고계 --> ',
		'	<div class="today-input-summary"> ',
		'		<div class="record">0</div> ',
		'	</div> ',
		'	<!-- 당일 출고 --> ',
		'	<div class="today-outputs"> ',
		'	</div>',
		'	<!-- 출고계 --> ',
		'	<div class="today-output-summary"> ',
		'		<div class="record">0</div> ',
		'	</div> ',
		'	<!-- 당일 재고 --> ',
		'	<div class="today-total-summary"> ',
		'		<div class="record">0</div> ',
		'	</div> ',
		'</div>'
	].join("");
	
	return {
		
		createColumnGroupName: function( name ){
			
			var $columnGroupName = $( columnGroupName );
			$columnGroupName.text( name );
			return $columnGroupName;
			
		},
		
		createColumnGroup: function( id, name ){
			
			var $columnGroup = $( columnGroup );
			$columnGroup.data({
				id: id,
				name: name
			});
			
			return $columnGroup;
		},
		
		createColumn: function( id, name ){
			
			var $column = $( column );
			$column.data({
				id: id,
				name: name
			});
			$column.find(".product-name").text( name );
			return $column;
			
		},
		
		createRecord: function(){
			
			var $record = $( record );
			$record.getValue = recordGetValue;
			$record.setValue = recordSetValue;
			return $record;
			
		},
		
		createInputRecord: function(){
			
			var $inputRecord = $( inputRecord );
			$inputRecord.getValue = recordGetValue;
			$inputRecord.setValue = inputRecordSetValue;
			return $inputRecord;
			
		}
		
	};
	
})();


/**
 * 데이터 표시
 */
var products = <%- products %>;
products.sort(function( a, b ){
	if( a.order < b.order ){ return -1 };
	if( a.order > b.order ){ return 1 };
	return 0;
});

var Manager = (function(){
	
	function getById( id ){
		for( var i=0; i<this.length; ++i ){
			var $columns = this[ i ];
			if( $columns.data("id") == id ){
				return $columns;
			}
		}
	}
	function removeById( id ){
		for( var i=0; i<this.length; ++i ){
			var $columns = this[ i ];
			if( $columns.data("id") == id ){
				return this.splice( i, 1 );
			}
		}
	}

	var $columns = [];
	var $columnGroups = [];
	$columns.get = getById;
	$columnGroups.get = getById;
	$columns.remove = removeById;
	$columnGroups.remove = removeById;
	
	return {
		$columnGroups: $columnGroups,
		$columns: $columns
	};
	
})();

var records = <%- records %>;
products.forEach(function( productGroup ){
	 
	 if( productGroup.parentId != "TOP" ){
		 return;
	 }
	 
	 if( productGroup.remove == true ){
		 return;
	 }
	 
	 var $columnGroup = TemplateModule.createColumnGroup( productGroup.id, productGroup.name );
	 var $column = TemplateModule.createColumn( productGroup.id, productGroup.name );
	 $column.addClass("top-parent");
	 
	 Manager.$columnGroups.push( $columnGroup );
	 Manager.$columns.push( $column );
	 
	 $columnGroup.append( $column );
	 $columnGroup.appendTo( $productColumnList );
	 
});
products.forEach(function( product ){
	 
	 if( product.parentId == "TOP" ){
		 return;
	 }
	 
	 if( product.remove == true ){
		 return;
	 }
	 
	 var $productGroup = Manager.$columnGroups.get( product.parentId );
	 if( $productGroup == null ){
		 return;
	 }
	 
	 var $column = TemplateModule.createColumn( product.id, product.name );
	 if( 0 == $productGroup.find(".product-group-name").length ){
		 
		 // 기존 그룹 컬럼 제거
		 $productGroup.find(".product-column").remove();
		 Manager.$columns.remove( $productGroup.data( "id" )  );
		 
		 // 그룹명 추가
		 var $ColumnGroupName = TemplateModule.createColumnGroupName( $productGroup.data( "name" ) );
		 $productGroup.append( $ColumnGroupName );
	 }
	 $productGroup.append( $column );
	 Manager.$columns.push( $column );
	 
});


// 입고 추가 버튼 클릭 이벤트
$addInputBtn.on("click", function(){

	var inputCnt = parseInt( $inputCnt.text() );
	inputCnt++;
	
	var rowId = Date.now().toString() + Math.random();
	Manager.$columns.forEach(function( $column ){
		
		var $record = TemplateModule.createInputRecord();
		$record.setValue( 0 );
		$record.width( $column.width() );
		$record.attr("data-row-id", rowId);
		$column.find(".today-inputs").append( $record );
		
	});
	
	$inRecordScrollBar.height( inputCnt * 30 );
	$inputCnt.text( inputCnt );
	
});

$addOutputBtn.on("click", function(){
	
	var outputCnt = parseInt( $outputCnt.text() );
	outputCnt++;
	
	var rowId = Date.now().toString() + Math.random();
	Manager.$columns.forEach(function( $column ){
		
		var $record = TemplateModule.createInputRecord();
		$record.setValue( 0 );
		$record.width( $column.width() );
		$record.attr("data-row-id", rowId);
		$column.find(".today-outputs").append( $record );
		
	});
	
	var $record = TemplateModule.createInputRecord();
	$record.setValue( "" );
	$record.find("input").css({
		"text-align": "center"
	});
	$record.attr("data-row-id", rowId);
	$outputEmployeeColumn.append( $record );
	
	$outRecordScrollBar.height( outputCnt * 30 );
	$outputCnt.text( outputCnt );
	
});

$outputEmployeeColumn.on("click", "input", function( e ){
	
	e.stopPropagation();
	
	var $input = $(this);
	var rect = $input.get( 0 ).getBoundingClientRect();
	$employeeList.css({
		left: rect.x + "px",
		top: rect.y + $input.height() + 8 + "px"
	});

	$employeeList.data("$input", $input);
	$employeeList.show();
	$input.trigger("keyup");
	
});


$outputEmployeeColumn.on("keyup", "input", function( e ){
	
	var $input = $(this);
	var text = $input.val().toUpperCase();
	var $employees = $employeeList.find(".employee-item");
	var beforeVisibleCnt = $employees.filter(":visible").length;
	for( var i=0; i<$employees.length; ++i ){
		var $employee = $employees.eq( i );
		if( -1 < $employee.text().toUpperCase().indexOf( text ) ){
			$employee.show();
		}else{
			$employee.hide();
		}
	}
	
});

$employeeList.on("click", ".employee-item", function( e ){
	
	var $employee = $(this);
	var $employeeList = $employee.closest( ".employee-list" );
	var $input = $employeeList.data("$input");
	if( $input == null ){
		return;
	}
	
	$employeeList.data("$input", null);
	$input.val( $employee.attr("data-name") );
	$input.data( "employeeId", $employee.attr("data-id") );
	
});

// $outputEmployeeColumn.on("keypress", "input", function( e ){
	
// 	alert();
	
// 	if( e.keyCode == 40 ){
		
		
		
// 	}
	
// // 	$employees.filter(":visible").eq( 0 ).addClass("focus");
	
// // 	$employeeList.find(".employee-item");
	
// });



String.prototype.addNumberComma = function() {
    return this.replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}; 

String.prototype.removeNumberComma = function() {
    return this.replace(/,/gi, "");
}; 

function updateSummary(){
	
	var $this = $(this);
	var $productCloumn = $this.closest( ".product-column" );
	
	var $beforeTotalSummary = $productCloumn.find(".before-total-summary .record");
	var beforeTotalSummary = parseFloat( $beforeTotalSummary.text() );
	
	var $todayInputSummary = $productCloumn.find(".today-input-summary .record");
	var $todayInputs = $productCloumn.find(".today-inputs .record input");
	
	var todayInputs = 0;
	for( var i=0; i<$todayInputs.length; ++i ){
		
		var todayInput = parseFloat( $todayInputs.eq( i ).val() );
		if( isNaN( todayInput ) == true ){
			todayInput = 0;
		}
		todayInputs += todayInput;
	}
	$todayInputSummary.text( todayInputs.toString().addNumberComma() );
	
	var $todayOutputSummary = $productCloumn.find(".today-output-summary .record");
	var $todayOutputs = $productCloumn.find(".today-outputs .record input");
	
	var todayOutputs = 0;
	for( var i=0; i<$todayOutputs.length; ++i ){
		
		var todayOutput = parseFloat( $todayOutputs.eq( i ).val() );;
		if( isNaN( todayOutput ) == true ){
			todayOutput = 0;
		}
		todayOutputs += todayOutput;
	}
	$todayOutputSummary.text( todayOutputs.toString().addNumberComma() );
	
	var $todayTotalSummary = $productCloumn.find(".today-total-summary .record");
	$todayTotalSummary.text( ( beforeTotalSummary + todayInputs - todayOutputs ).toString().addNumberComma() );
	var width = $productCloumn.width() - 4;
	
	for( var i=0; i<$todayInputs.length; ++i ){
		$todayInputs.eq( i ).closest(".record").width( width );
	}
	for( var i=0; i<$todayOutputs.length; ++i ){
		$todayOutputs.eq( i ).closest(".record").width( width );
	}
	
}

// 스크롤
$body.on("wheel", function( e ){
	
	if( 
			inRecordDivRect.x <= e.pageX && 
			e.pageX <= inRecordDivRect.x + inRecordDivRect.width && 
			inRecordDivRect.y <= e.pageY && 
			e.pageY <= inRecordDivRect.y + inRecordDivRect.height
	){
		
		var beforeScrollTop = $(".today-inputs").scrollTop();
		var afterScrollTop = beforeScrollTop + e.originalEvent.deltaY / 10 * 3;
		$(".today-inputs").scrollTop( afterScrollTop );
		$inRecordScroll.scrollTop( afterScrollTop );
		return;	
	}
	
	if( 
			outRecordDivRect.x <= e.pageX && 
			e.pageX <= outRecordDivRect.x + outRecordDivRect.width && 
			outRecordDivRect.y <= e.pageY && 
			e.pageY <= outRecordDivRect.y + outRecordDivRect.height
	){
		
		var beforeScrollTop = $(".today-outputs").scrollTop();
		var afterScrollTop = beforeScrollTop + e.originalEvent.deltaY / 10 * 3;
		$(".today-outputs").scrollTop( afterScrollTop );
		$outRecordScroll.scrollTop( afterScrollTop );
		
	}
	
});

// 입력창
$body.on("click", function(){
	
	$employeeList.hide();
	
}).on("focus", "input", function(){
	
	var $this = $(this);
	var $record = $this.closest( ".record" );
	if( $record.length == 0 ){
		return;
	}
	$(".record.select-row").removeClass( "select-row" );
	$(".product-column.select-column").removeClass( "select-column" );
	var rowId = $record.attr("data-row-id");
	$body.find(".record[data-row-id='"+rowId+"']").addClass( "select-row", 250 );
	$this.closest(".product-column").addClass( "select-column", 250 );
	$this.select();
	
}).on("keydown", "input", updateSummary).on("keyup", "input", updateSummary);

function updateBodyHeight(){
	$body.css("height", window.innerHeight + "px");
}

var inRecordDivRect =  null;
var outRecordDivRect =  null;

// 윈도우 크기 변경 이벤트
$window.on("resize", function(){
	updateBodyHeight();
	inRecordDivRect = $inRecordDiv.get(0).getBoundingClientRect();
	outRecordDivRect = $outRecordDiv.get(0).getBoundingClientRect();
}).trigger("resize");

// alert( "출고 추가 시, 직원 검색 추가해야됨. 깃랩처럼 사용자 입력 시, 자동완성 [북부]김성용 선택시, 자동 입력 blur 시, id 자동 맵핑" )

// 저장 전, input의 직원 아이디가 있는지 검증 걸어야됨 ( 사용작 입력의 경우 없을 수 있음 이때는, 조회해서 값넣고, 2개이상이면, 먼가 조치가 필요)

</script>
</body>
</html>